# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head

        sentry = ListNode(next=head)
        prev = sentry

        dup_map = {}

        while head and head.next:
            if head.val in dup_map:
                head = head.next
                prev.next = head
                continue

            if head.val == head.next.val:
                dup_map[head.val] = True
                head = head.next.next
                prev.next = head
            else:
                prev = head
                head = head.next

        if head and head.val in dup_map:
            prev.next = head.next

        return sentry.next

        
